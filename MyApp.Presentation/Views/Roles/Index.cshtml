@model List<MyApp.Business.Dtos.User.UserDto>
@{
    ViewData["Title"] = "Cambiar Roles de Usuarios";
    var availableRoles = ViewBag.AvailableRoles as List<MyApp.Entities.Models.Role> ?? new List<MyApp.Entities.Models.Role>();
}

<div class="row">
    <div class="col-12">
        <h1 class="mb-4">
            <i class="fas fa-users-cog"></i> Cambiar Roles de Usuarios
        </h1>

        <div class="alert alert-info">
            <i class="fas fa-info-circle"></i>
            <strong>RF1.3:</strong> Solo usuarios "Administrador" pueden asignar y cambiar roles.
        </div>
    </div>
</div>

@if (Model.Any())
{
    <div class="card">
        <div class="card-header">
            <h5 class="mb-0">
                <i class="fas fa-list"></i> Lista de Usuarios
                <span class="badge bg-secondary ms-2">@Model.Count usuarios</span>
            </h5>
        </div>
        <div class="card-body">
            <div class="table-responsive">
                <table class="table table-striped table-hover">
                    <thead class="table-dark">
                        <tr>
                            <th>Usuario</th>
                            <th>Email</th>
                            <th>Rol Actual</th>
                            <th>Estado</th>
                            <th>Nuevo Rol</th>
                            <th class="text-center">Acción</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var user in Model.OrderBy(u => u.Name))
                        {
                            var isCurrentUser = user.Id.ToString() == User.FindFirst(ClaimTypes.NameIdentifier)?.Value;

                            <tr class="@(isCurrentUser ? "table-warning" : "")">
                                <td>
                                    <div class="d-flex align-items-center">
                                        <div class="me-2">
                                            <div class="bg-primary text-white rounded-circle d-flex align-items-center justify-content-center"
                                                 style="width: 35px; height: 35px;">
                                                @user.Name.Substring(0, 1).ToUpper()
                                            </div>
                                        </div>
                                        <div>
                                            <strong>@user.Name</strong>
                                            @if (isCurrentUser)
                                            {
                                                <span class="badge bg-warning text-dark ms-1">TÚ</span>
                                            }
                                        </div>
                                    </div>
                                </td>
                                <td>@user.Email</td>
                                <td>
                                    <span class="badge bg-@GetRoleBadgeClass(user.RoleName) fs-6">
                                        @user.RoleName
                                    </span>
                                </td>
                                <td>
                                    @if (user.IsActive)
                                    {
                                        <span class="badge bg-success">Activo</span>
                                    }
                                    else
                                    {
                                        <span class="badge bg-danger">Inactivo</span>
                                    }
                                </td>
                                <td>
                                    @if (isCurrentUser)
                                    {
                                        <span class="text-muted">No puedes cambiar tu propio rol</span>
                                    }
                                    else
                                    {
                                        <form asp-action="ChangeRole" method="post" class="d-flex align-items-center gap-2"
                                              onsubmit="return confirmRoleChange('@user.Name', this)">
                                            <input type="hidden" name="userId" value="@user.Id" />

                                            <select name="newRoleId" class="form-select form-select-sm" style="width: auto;">
                                                @foreach (var role in availableRoles)
                                                {
                                                    <option value="@role.Id" selected="@(role.Name == user.RoleName)">
                                                        @role.Name
                                                    </option>
                                                }
                                            </select>

                                            <button type="submit" class="btn btn-primary btn-sm">
                                                <i class="fas fa-save"></i> Cambiar
                                            </button>
                                        </form>
                                    }
                                </td>
                                <td class="text-center">
                                    <button type="button" class="btn btn-outline-info btn-sm"
                                            onclick="showUserInfo('@user.Name', '@user.Email', '@user.RoleName', '@user.CreatedDate.ToString("dd/MM/yyyy")', '@(user.IsActive ? "Activo" : "Inactivo")')">
                                        <i class="fas fa-eye"></i>
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        </div>
    </div>

    <!-- Estadísticas simples -->
    <div class="row mt-4">
        <div class="col-md-6">
            <div class="card border-primary">
                <div class="card-body text-center">
                    <h5 class="card-title text-primary">Administradores</h5>
                    <h2 class="text-primary">@Model.Count(u => u.RoleName == "Administrator")</h2>
                    <p class="card-text">Con acceso completo</p>
                </div>
            </div>
        </div>
        <div class="col-md-6">
            <div class="card border-success">
                <div class="card-body text-center">
                    <h5 class="card-title text-success">Operadores</h5>
                    <h2 class="text-success">@Model.Count(u => u.RoleName == "Operator")</h2>
                    <p class="card-text">Con acceso limitado</p>
                </div>
            </div>
        </div>
    </div>
}
else
{
    <div class="text-center py-5">
        <i class="fas fa-users fa-3x text-muted mb-3"></i>
        <h4 class="text-muted">No hay usuarios registrados</h4>
        <p class="text-muted">No se encontraron usuarios en el sistema.</p>
    </div>
}

<!-- Modal para mostrar información del usuario -->
<div class="modal fade" id="userInfoModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">
                    <i class="fas fa-user"></i> Información del Usuario
                </h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <div class="modal-body">
                <dl class="row">
                    <dt class="col-sm-4">Nombre:</dt>
                    <dd class="col-sm-8" id="modalUserName"></dd>

                    <dt class="col-sm-4">Email:</dt>
                    <dd class="col-sm-8" id="modalUserEmail"></dd>

                    <dt class="col-sm-4">Rol:</dt>
                    <dd class="col-sm-8" id="modalUserRole"></dd>

                    <dt class="col-sm-4">Estado:</dt>
                    <dd class="col-sm-8" id="modalUserStatus"></dd>

                    <dt class="col-sm-4">Registrado:</dt>
                    <dd class="col-sm-8" id="modalUserCreated"></dd>
                </dl>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Cerrar</button>
            </div>
        </div>
    </div>
</div>

@functions {
    string GetRoleBadgeClass(string roleName)
    {
        return roleName switch
        {
            "Administrator" => "primary",
            "Operator" => "success",
            _ => "secondary"
        };
    }
}

@section Scripts {
    <script>
        function confirmRoleChange(userName, form) {
            const select = form.querySelector('select');
            const newRoleName = select.options[select.selectedIndex].text;

            return confirm(`¿Estás seguro de cambiar el rol de "${userName}" a "${newRoleName}"?`);
        }

        function showUserInfo(name, email, role, created, status) {
            document.getElementById('modalUserName').textContent = name;
            document.getElementById('modalUserEmail').textContent = email;
            document.getElementById('modalUserRole').textContent = role;
            document.getElementById('modalUserStatus').textContent = status;
            document.getElementById('modalUserCreated').textContent = created;

            new bootstrap.Modal(document.getElementById('userInfoModal')).show();
        }

        // Resaltar cambios no guardados
        document.addEventListener('DOMContentLoaded', function() {
            const selects = document.querySelectorAll('select[name="newRoleId"]');

            selects.forEach(select => {
                const originalValue = select.value;

                select.addEventListener('change', function() {
                    const form = this.closest('form');
                    const button = form.querySelector('button');

                    if (this.value !== originalValue) {
                        button.classList.remove('btn-primary');
                        button.classList.add('btn-warning');
                        button.innerHTML = '<i class="fas fa-exclamation-triangle"></i> Cambiar';
                    } else {
                        button.classList.remove('btn-warning');
                        button.classList.add('btn-primary');
                        button.innerHTML = '<i class="fas fa-save"></i> Cambiar';
                    }
                });
            });
        });
    </script>
}